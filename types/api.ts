/**
 * Auto-generated TypeScript interfaces from OpenAPI specification
 * Generated on: 2025-08-15T08:05:00.845Z
 * 
 * DO NOT EDIT THIS FILE MANUALLY
 * This file is automatically generated from the OpenAPI specification.
 * To update these types, modify the OpenAPI spec and regenerate.
 */


// ============================================================================
// ENUMS
// ============================================================================

export enum NoteStatus {
  TODO = 'todo',
  IN_PROGRESS = 'in_progress',
  DONE = 'done'
}
export enum NotePriority {
  LOW = 'low',
  MEDIUM = 'medium',
  HIGH = 'high'
}
export enum CompletedNotePriority {
  LOW = 'low',
  MEDIUM = 'medium',
  HIGH = 'high'
}
export enum CreateNoteRequestPriority {
  LOW = 'low',
  MEDIUM = 'medium',
  HIGH = 'high'
}
export enum UpdateNoteRequestStatus {
  TODO = 'todo',
  IN_PROGRESS = 'in_progress',
  DONE = 'done'
}
export enum UpdateNoteRequestPriority {
  LOW = 'low',
  MEDIUM = 'medium',
  HIGH = 'high'
}
export enum HealthResponseDatabase {
  CONNECTED = 'connected',
  DISCONNECTED = 'disconnected'
}

// ============================================================================
// INTERFACES
// ============================================================================

export interface User {
  /** User ID */
  id: string;
  /** User email address */
  email: string;
  /** User first name */
  firstName: string;
  /** User last name */
  lastName: string;
  /** User active status */
  isActive: boolean;
  /** User creation timestamp */
  createdAt: string;
  /** User last update timestamp */
  updatedAt: string;
  /** Last login timestamp */
  lastLoginAt?: string;
}
export interface Note {
  /** Note ID */
  id: string;
  /** Owner user ID */
  userId: string;
  /** Group ID */
  groupId?: string;
  /** Note title */
  title: string;
  /** Note description */
  description?: string;
  /** Note status */
  status: 'todo' | 'in_progress' | 'done';
  /** Note priority */
  priority: 'low' | 'medium' | 'high';
  /** Note creation timestamp */
  createdAt: string;
  /** Note last update timestamp */
  updatedAt: string;
  /** Note completion timestamp */
  completedAt?: string;
}
export interface Group {
  /** Group ID */
  id: string;
  /** Owner user ID */
  userId: string;
  /** Group name */
  name: string;
  /** Group description */
  description?: string;
  /** Group color (hex) */
  color: string;
  /** Group creation timestamp */
  createdAt: string;
  /** Group last update timestamp */
  updatedAt: string;
  /** Number of notes in group (when included) */
  noteCount?: number;
}
export interface CompletedNote {
  /** Completed note ID */
  id: string;
  /** Owner user ID */
  userId: string;
  /** Original note ID */
  originalNoteId: string;
  /** Note title */
  title: string;
  /** Note description */
  description?: string;
  /** Group name at completion */
  groupName?: string;
  /** Note priority */
  priority: 'low' | 'medium' | 'high';
  /** Note completion timestamp */
  completedAt: string;
  /** Original note creation timestamp */
  createdAt: string;
}
export interface LoginRequest {
  /** User email */
  email: string;
  /** User password */
  password: string;
}
export interface RegisterRequest {
  /** User email */
  email: string;
  /** User password */
  password: string;
  /** User first name */
  firstName: string;
  /** User last name */
  lastName: string;
}
export interface AuthResponse {
  success?: boolean;
  data?: { user?: User; token?: string; refreshToken?: string; expiresIn?: number };
}
export interface CreateNoteRequest {
  /** Note title */
  title: string;
  /** Note description */
  description?: string;
  /** Note priority */
  priority?: 'low' | 'medium' | 'high';
  /** Group ID */
  groupId?: string;
}
export interface UpdateNoteRequest {
  /** Note title */
  title?: string;
  /** Note description */
  description?: string;
  /** Note status */
  status?: 'todo' | 'in_progress' | 'done';
  /** Note priority */
  priority?: 'low' | 'medium' | 'high';
  /** Group ID */
  groupId?: string;
}
export interface CreateGroupRequest {
  /** Group name */
  name: string;
  /** Group description */
  description?: string;
  /** Group color (hex) */
  color?: string;
}
export interface SuccessResponse {
  success: boolean;
  /** Response data */
  data?: Record<string, any>;
  /** Success message */
  message?: string;
}
export interface ErrorResponse {
  success: boolean;
  error: { code: string; message: string; details?: Record<string, any> };
  /** Error timestamp */
  timestamp?: string;
  /** Request ID for tracking */
  requestId?: string;
}
export interface PaginatedResponse {
  success: boolean;
  data: { items: Record<string, any>[]; pagination: { page: number; limit: number; total: number; totalPages: number; hasNext: boolean; hasPrev: boolean } };
}
export interface HealthResponse {
  status: string;
  timestamp: string;
  /** Environment name */
  environment: string;
  /** Application version */
  version: string;
  database: 'connected' | 'disconnected';
  /** Process uptime in seconds */
  uptime: number;
}

// ============================================================================
// API TYPES
// ============================================================================


export interface ApiResponse<T = any> {
  success: boolean;
  data?: T;
  message?: string;
  error?: ApiError;
  timestamp?: string;
  requestId?: string;
}

export interface ApiError {
  code: string;
  message: string;
  details?: any;
}

export interface PaginatedResponse<T = any> {
  success: boolean;
  data: {
    items: T[];
    pagination: PaginationInfo;
  };
}

export interface PaginationInfo {
  page: number;
  limit: number;
  total: number;
  totalPages: number;
  hasNext: boolean;
  hasPrev: boolean;
}

export interface QueryParams {
  page?: number;
  limit?: number;
  sortBy?: string;
  sortOrder?: 'ASC' | 'DESC';
  search?: string;
}


// ============================================================================
// EXPORT ALL
// ============================================================================

export default {};