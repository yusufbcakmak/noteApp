{
  "name": "note-management-app",
  "version": "1.0.0",
  "description": "A SaaS note management application with Jira-like interface",
  "main": "src/server.js",
  "scripts": {
    "start": "node src/server.js",
    "start:prod": "NODE_ENV=production node src/server.js",
    "dev": "NODE_ENV=development nodemon src/server.js",
    "dev:debug": "NODE_ENV=development LOG_LEVEL=debug nodemon src/server.js",
    "build": "npm run build:frontend && npm run build:functions",
    "build:frontend": "cd frontend && npm install && npm run build",
    "build:functions": "npm run db:setup:netlify",
    "netlify:dev": "netlify dev",
    "netlify:build": "npm run build",
    "netlify:deploy": "netlify deploy",
    "netlify:deploy:prod": "netlify deploy --prod",
    "db:setup:netlify": "node scripts/setup-netlify-db.js",
    "test": "NODE_ENV=test jest",
    "test:watch": "NODE_ENV=test jest --watch",
    "test:coverage": "NODE_ENV=test jest --coverage",
    "test:ci": "NODE_ENV=test jest --ci --coverage --watchAll=false",
    "validate:config": "node src/scripts/validate-config.js",
    "db:init": "node src/scripts/init-db.js",
    "db:migrate": "node src/scripts/migrate.js",
    "db:migrate:status": "node src/scripts/migrate.js status",
    "db:migrate:rollback": "node src/scripts/migrate.js rollback",
    "db:migrate:reset": "node src/scripts/migrate.js reset",
    "setup": "npm install && npm run db:init && npm run db:migrate && cd frontend && npm install",
    "setup:dev": "npm run setup && npm run validate:config",
    "clean": "rm -rf node_modules coverage logs database/notes.db* frontend/node_modules frontend/dist",
    "lint": "echo 'Linting not configured - consider adding ESLint'",
    "contracts:generate": "node src/scripts/generate-contracts.js all",
    "contracts:types": "node src/scripts/generate-contracts.js types",
    "contracts:tests": "node src/scripts/generate-contracts.js tests",
    "contracts:validate": "node src/scripts/generate-contracts.js validate",
    "contracts:export": "node src/scripts/generate-contracts.js export",
    "contracts:watch": "node src/scripts/generate-contracts.js watch",
    "api:validate": "node src/scripts/validate-api-consistency.js validate",
    "api:mock-server": "node src/scripts/validate-api-consistency.js mock-server",
    "api:generate-client": "node src/scripts/validate-api-consistency.js generate-client",
    "api:test": "node src/scripts/validate-api-consistency.js test",
    "docs:generate": "node -e \"const gen = require('./src/utils/apiDocumentationGenerator'); const g = new gen(); g.generateDocumentation().then(() => console.log('Documentation generated'))\"",
    "docs:validate": "node -e \"const gen = require('./src/utils/apiDocumentationGenerator'); const g = new gen(); g.init().then(() => console.log(JSON.stringify(g.validateDocumentation(), null, 2)))\"",
    "monitor:start": "node src/scripts/contract-monitoring.js start",
    "monitor:check": "node src/scripts/contract-monitoring.js check",
    "monitor:status": "node src/scripts/contract-monitoring.js status",
    "monitor:report": "node src/scripts/contract-monitoring.js report",
    "monitor:test-alert": "node src/scripts/contract-monitoring.js test-alert",
    "prestart": "npm run validate:config",
    "prestart:prod": "npm run validate:config && npm run build",
    "postinstall": "echo 'Installation complete. Run npm run setup:dev for development setup.'"
  },
  "keywords": [
    "notes",
    "saas",
    "task-management",
    "nodejs",
    "express"
  ],
  "author": "",
  "license": "MIT",
  "engines": {
    "node": ">=16.0.0"
  },
  "dependencies": {
    "@apidevtools/swagger-parser": "^12.0.0",
    "bcrypt": "^6.0.0",
    "better-sqlite3": "^12.2.0",
    "chokidar": "^4.0.3",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "express-rate-limit": "^8.0.1",
    "helmet": "^8.1.0",
    "isomorphic-dompurify": "^2.26.0",
    "joi": "^18.0.0",
    "joi-to-swagger": "^6.2.0",
    "js-yaml": "^4.1.0",
    "jsonwebtoken": "^9.0.2",
    "serverless-http": "^3.2.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^11.1.0",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "dotenv": "^16.4.5",
    "jest": "^30.0.5",
    "netlify-cli": "^17.38.1",
    "nodemon": "^3.1.10",
    "supertest": "^7.1.4"
  }
}
