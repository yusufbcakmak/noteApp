version: '3.8'

services:
  # Main application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: note-management-app
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - HOST=0.0.0.0
      - DATABASE_PATH=/app/data/notes.db
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_ENABLE_FILE=true
      - LOG_FILE_PATH=/app/logs/app.log
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: note-management-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - app_logs:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_network
    profiles:
      - with-nginx

volumes:
  app_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  app_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs

networks:
  app_network:
    driver: bridge

# Development override
# Use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
---
version: '3.8'

# docker-compose.dev.yml
services:
  app:
    build:
      target: builder
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
    volumes:
      - .:/app
      - /app/node_modules
      - /app/frontend/node_modules
    command: npm run dev
    ports:
      - "3000:3000"
      - "5173:5173"  # Frontend dev server